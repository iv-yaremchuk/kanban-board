{"version":3,"sources":["components/header/account/user-avatar.svg","components/header/account/Account.jsx","components/header/Header.jsx","components/main/card/CardItem.jsx","components/main/card/Card.jsx","components/main/modal/Modal.jsx","components/main/Main.jsx","components/footer/Footer.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Account","_useState","useState","_useState2","_slicedToArray","state","setState","React","createElement","Fragment","className","onClick","src","avatar","alt","onFocus","href","onBlur","Header","CardItem","props","type","tasks","setTasks","createNewTask","prevTaskList","location","useLocation","active","setActive","inputValueRef","useRef","AddButton","length","title","width","height","viewBox","fill","xmlns","d","map","task","key","id","Link","to","concat","background","Outlet","onSubmit","e","preventDefault","current","value","trim","autocomplete","ref","onChange","status","tasksCopy","JSON","parse","window","localStorage","getItem","target","statusChange","Card","_LIST_TYPES_COPY","LIST_TYPES","BACKLOG","IN_PROGRESS","READY","FINISHED","LIST_TYPES_COPY","_defineProperty","newTask","uniqid","description","created","Date","toISOString","_toConsumableArray","moveTask","Object","values","listTasks","filter","indexOf","Modal","useParams","find","navigate","useNavigate","setDescription","FocusTrap","elem","x1","y1","x2","y2","stroke","transform","Main","Routes","Route","path","element","Footer","_ref","App","initialState","useEffect","setItem","stringify","Router","reportWebVitals","onPerfEntry","Function","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.415f787a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user-avatar.9ac222b2.svg\";","import React, { useState } from 'react';\nimport './style.css';\nimport avatar from './user-avatar.svg';\n\nfunction Account() {\n  const [state, setState] = useState(true);\n\n  return (\n    <>\n      <div className=\"header-account__wrap\">\n        <button\n          onClick={() => {\n            setState(!state);\n          }}\n          className=\"header-account__btn\"\n        >\n          <img\n            className=\"header-account__avatar\"\n            src={avatar}\n            alt=\"user's avatar\"\n          />\n        </button>\n        <span\n          onClick={() => {\n            setState(!state);\n          }}\n          className={\n            state ? 'header-account__arrow' : 'header-account__arrow is-active'\n          }\n        ></span>\n      </div>\n      <nav className={state ? 'dropdown-menu' : 'dropdown-menu is-active'}>\n        <ul className=\"dropdown-menu__list\">\n          <li className=\"dropdown-menu__item\">\n            <a onFocus={() => {setState(false)}} href=\"/\" className=\"dropdown-menu__link\">\n              Profile\n            </a>\n          </li>\n          <li className=\"dropdown-menu__item\">\n            <a onBlur={() => {setState(!state)}} href=\"/\" className=\"dropdown-menu__link\">\n              Log Out\n            </a>\n          </li>\n        </ul>\n      </nav>\n    </>\n  );\n}\n\nexport default Account;\n","import React from 'react';\nimport Account from './account/Account';\n// import {Link} from 'react-router-dom'\nimport './style.css'\n\n\nfunction Header () {\n  return (\n    <>\n      <header className='header'>\n        <h1 className='header__title'>Awesome Kanban Board</h1>\n        <Account />\n      </header>\n    </>\n  )\n}\n\nexport default Header;","import React, { useState, useRef } from 'react';\nimport './style.css';\nimport { Link, Outlet, useLocation } from 'react-router-dom';\n\nfunction CardItem(props) {\n  const { type, tasks, setTasks, createNewTask, prevTaskList } = props;\n  const location = useLocation();\n  const [active, setActive] = useState(false);\n  const inputValueRef = useRef(null);\n\n  const AddButton = (\n    <button\n      onClick={() => {\n        setActive(true);\n      }}\n      className={\n        prevTaskList.length || props.title === 'Backlog'\n          ? 'card__btn--add is-active'\n          : 'card__btn--add'\n      }\n    >\n      <svg\n        className=\"btn-icon\"\n        width=\"14\"\n        height=\"14\"\n        viewBox=\"0 0 14 14\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M13 6H8V1C8 0.448 7.552 0 7 0C6.448 0 6 0.448 6 1V6H1C0.448 6 0 6.448 0 7C0 7.552 0.448 8 1 8H6V13C6 13.552 6.448 14 7 14C7.552 14 8 13.552 8 13V8H13C13.552 8 14 7.552 14 7C14 6.448 13.552 6 13 6Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n      Add card\n    </button>\n  );\n\n  function CardItemFormOrSelect() {\n    const handleSubmit = (e) => {\n      e.preventDefault();\n      if (inputValueRef.current.value.trim()) {\n        createNewTask(inputValueRef.current.value);\n      }\n      setActive(false);\n    };\n\n    const statusChange = (e, status) => {\n      const tasksList = JSON.parse(window.localStorage.getItem('tasks'));\n      const tasksCopy = tasksList.map((task) => {\n        if (task.id === e.target.value) {\n          task.status = status;\n        }\n        return task;\n      });\n\n      setTasks(tasksCopy);\n      setActive(false);\n    };\n\n    if (type === 'backlog') {\n      return (\n        <form onSubmit={handleSubmit} className=\"card__form\">\n          <input\n            type=\"text\"\n            id=\"title\"\n            className=\"card__input\"\n            autocomplete=\"off\"\n            ref={inputValueRef}\n          />\n          <button type=\"submit\" className=\"card__btn--submit\">\n            Submit\n          </button>\n        </form>\n      );\n    } else {\n      return (\n        <select\n          className=\"card__select\"\n          onChange={(e) => statusChange(e, type)}\n        >\n          <option value={'default'}>Select task</option>\n          {prevTaskList.map((task) => {\n            return (\n              <option className=\"card__option\" key={task.id} value={task.id}>\n                {task.title}\n              </option>\n            );\n          })}\n        </select>\n      );\n    }\n  }\n\n  return (\n    <div className=\"card\">\n      <h2 className=\"card__title\">{props.title}</h2>\n      <ul className=\"card__list\">\n        {tasks.length ? (\n          tasks.map((task) => (\n            <li key={task.id} className=\"card__item\">\n              <Link\n                className=\"card__link\"\n                to={`/tasks/${task.id}`}\n                state={{ background: location }}\n              >\n                <h2 className=\"card__subtitle\">{task.title}</h2>\n              </Link>\n              <Outlet />\n            </li>\n          ))\n        ) : (\n          <p className=\"card__text\">No tasks added yet</p>\n        )}\n      </ul>\n      {!active ? AddButton : <CardItemFormOrSelect />}\n    </div>\n  );\n}\n\nexport default CardItem;\n","import React from 'react';\nimport './style.css';\nimport CardItem from './CardItem';\nimport uniqid from 'uniqid';\n\nfunction Card(props) {\n  const { tasks, setTasks } = props;\n\n  const LIST_TYPES = {\n    BACKLOG: 'backlog',\n    IN_PROGRESS: 'inProgress',\n    READY: 'ready',\n    FINISHED: 'finished',\n  };\n  const LIST_TYPES_COPY = {\n    [LIST_TYPES.BACKLOG]: 'Backlog',\n    [LIST_TYPES.IN_PROGRESS]: 'In progress',\n    [LIST_TYPES.READY]: 'Ready',\n    [LIST_TYPES.FINISHED]: 'Finished',\n  };\n\n  const createNewTask = (title) => {\n    const newTask = {\n      id: uniqid(),\n      title,\n      description: '',\n      created: new Date().toISOString(),\n      status: LIST_TYPES.BACKLOG,\n    };\n    setTasks([...tasks, newTask]);\n  };\n\n  const moveTask = Object.values(LIST_TYPES).map((type) => {\n    const listTasks = tasks.filter((task) => task.status === type);\n    const prevTaskList = tasks.filter(\n      (task) =>\n        task.status ===\n        Object.values(LIST_TYPES)[Object.values(LIST_TYPES).indexOf(type) - 1]\n    );\n\n    return (\n      <CardItem\n        key={LIST_TYPES_COPY[type]}\n        type={type}\n        title={LIST_TYPES_COPY[type]}\n        tasks={listTasks || []}\n        setTasks={setTasks}\n        createNewTask={createNewTask}\n        prevTaskList={prevTaskList}\n      />\n    );\n  });\n\n  return <>{moveTask}</>;\n}\n\nexport default Card;\n","import React, { useState } from 'react';\nimport './style.css';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport FocusTrap from 'focus-trap-react';\n\nfunction Modal(props) {\n  const { tasks, setTasks } = props;\n  const { id } = useParams();\n\n  const task = JSON.parse(window.localStorage.getItem('tasks')).find(\n    (task) => task.id === id\n  );\n\n  const navigate = useNavigate();\n  const [description, setDescription] = useState(\n    task.description ? task.description : 'This task has no description'\n  );\n\n  const addDescription = () => {\n    const tasksCopy = tasks.map((elem) => {\n      if (elem.id === id) {\n        elem.description = description;\n      }\n      return elem;\n    });\n    setTasks(tasksCopy);\n  };\n\n  return (\n    <FocusTrap>\n      <div className=\"modal\">\n        <div className=\"modal__wrap\">\n          <h2 className=\"modal__title\">{task.title}</h2>\n          <textarea\n            className=\"modal__text\"\n            onFocus={() => {\n              description === 'This task has no description' &&\n                setDescription('');\n            }}\n            onChange={(e) => {\n              setDescription(e.target.value);\n            }}\n            value={description}\n            onBlur={addDescription}\n          ></textarea>\n          <button onClick={() => navigate(-1)} className=\"modal__btn\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"25\"\n              height=\"24\"\n              viewBox=\"0 0 25 24\"\n              fill=\"none\"\n            >\n              <line\n                x1=\"1.35355\"\n                y1=\"0.646447\"\n                x2=\"24.3536\"\n                y2=\"23.6464\"\n                stroke=\"black\"\n              />\n              <line\n                y1=\"-0.5\"\n                x2=\"32.5269\"\n                y2=\"-0.5\"\n                transform=\"matrix(-0.707107 0.707107 0.707107 0.707107 24 1)\"\n                stroke=\"black\"\n              />\n            </svg>\n          </button>\n        </div>\n      </div>\n    </FocusTrap>\n  );\n}\n\nexport default Modal;\n","import React from 'react';\nimport './style.css';\nimport Card from './card/Card';\nimport Modal from '../main/modal/Modal';\nimport { Route, Routes, useLocation } from 'react-router-dom';\n\nfunction Main(props) {\n  const { tasks, setTasks } = props;\n  const location = useLocation();\n  const background = location.state && location.state.background;\n\n  return (\n    <main className=\"main\">\n      <Routes location={background || location}>\n        <Route path=\"/\" element={<Card tasks={tasks} setTasks={setTasks} />}>\n          <Route path=\"/tasks/:id\" element={<Modal />} />\n        </Route>\n      </Routes>\n      {background && (\n        <Routes>\n          <Route\n            path=\"/tasks/:id\"\n            element={<Modal tasks={tasks} setTasks={setTasks} />}\n          />\n        </Routes>\n      )}\n    </main>\n  );\n}\n\nexport default Main;\n","import React from \"react\";\nimport \"./style.css\"\n\nfunction Footer({tasks}) {\n\n\n  return (\n    <footer className=\"footer\">\n      <h3 className=\"tasks-active\">Active tasks: {tasks.filter(task => task.status === \"backlog\").length}</h3>\n      <h3 className=\"tasks-finished\">Finished tasks: {tasks.filter(task => task.status === \"finished\").length}</h3>\n      <h3 className=\"tasks-creator\">Kanban board by Ivan </h3>\n    </footer>\n  )\n}\n\nexport default Footer;","import React from 'react';\nimport '@fontsource/roboto/400.css';\nimport './App.css';\nimport Header from './components/header/Header';\nimport Main from './components/main/Main';\nimport Footer from './components/footer/Footer';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nfunction App() {\n  const initialState = JSON.parse(window.localStorage.getItem('tasks')) || [];\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    setTasks(initialState);\n  }, [setTasks]);\n\n  useEffect(() => {\n    window.localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n\n  return (\n    <Router>\n      <Header />\n      <Main tasks={tasks} setTasks={setTasks} />\n      <Footer tasks={tasks} setTasks={setTasks} />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}