{"ast":null,"code":"import _toConsumableArray from \"/home/ivan/web/skillfactory/React/kanban-board-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/home/ivan/web/skillfactory/React/kanban-board-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/ivan/web/skillfactory/React/kanban-board-main/src/components/main/card/Card.jsx\";\nimport React from 'react';\nimport './style.css';\nimport CardItem from './CardItem';\nimport uniqid from 'uniqid';\nfunction Card(props) {\n  var _LIST_TYPES_COPY,\n    _this = this;\n  var tasks = props.tasks,\n    setTasks = props.setTasks;\n  var LIST_TYPES = {\n    BACKLOG: 'backlog',\n    IN_PROGRESS: 'inProgress',\n    READY: 'ready',\n    FINISHED: 'finished'\n  };\n  var LIST_TYPES_COPY = (_LIST_TYPES_COPY = {}, _defineProperty(_LIST_TYPES_COPY, LIST_TYPES.BACKLOG, 'Backlog'), _defineProperty(_LIST_TYPES_COPY, LIST_TYPES.IN_PROGRESS, 'In progress'), _defineProperty(_LIST_TYPES_COPY, LIST_TYPES.READY, 'Ready'), _defineProperty(_LIST_TYPES_COPY, LIST_TYPES.FINISHED, 'Finished'), _LIST_TYPES_COPY);\n  var createNewTask = function createNewTask(title) {\n    var newTask = {\n      id: uniqid(),\n      title: title,\n      description: '',\n      created: new Date().toISOString(),\n      status: LIST_TYPES.BACKLOG\n    };\n    setTasks([].concat(_toConsumableArray(tasks), [newTask]));\n  };\n  var moveTask = Object.values(LIST_TYPES).map(function (type) {\n    var listTasks = tasks.filter(function (task) {\n      return task.status === type;\n    });\n    var prevTaskList = tasks.filter(function (task) {\n      return task.status === Object.values(LIST_TYPES)[Object.values(LIST_TYPES).indexOf(type) - 1];\n    });\n    return /*#__PURE__*/React.createElement(CardItem, {\n      key: LIST_TYPES_COPY[type],\n      type: type,\n      title: LIST_TYPES_COPY[type],\n      tasks: listTasks || [],\n      setTasks: setTasks,\n      createNewTask: createNewTask,\n      prevTaskList: prevTaskList,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, moveTask);\n}\nexport default Card;","map":{"version":3,"names":["React","CardItem","uniqid","Card","props","_LIST_TYPES_COPY","_this","tasks","setTasks","LIST_TYPES","BACKLOG","IN_PROGRESS","READY","FINISHED","LIST_TYPES_COPY","_defineProperty","createNewTask","title","newTask","id","description","created","Date","toISOString","status","concat","_toConsumableArray","moveTask","Object","values","map","type","listTasks","filter","task","prevTaskList","indexOf","createElement","key","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Fragment"],"sources":["/home/ivan/web/skillfactory/React/kanban-board-main/src/components/main/card/Card.jsx"],"sourcesContent":["import React from 'react';\nimport './style.css';\nimport CardItem from './CardItem';\nimport uniqid from 'uniqid';\n\nfunction Card(props) {\n  const { tasks, setTasks } = props;\n\n  const LIST_TYPES = {\n    BACKLOG: 'backlog',\n    IN_PROGRESS: 'inProgress',\n    READY: 'ready',\n    FINISHED: 'finished',\n  };\n  const LIST_TYPES_COPY = {\n    [LIST_TYPES.BACKLOG]: 'Backlog',\n    [LIST_TYPES.IN_PROGRESS]: 'In progress',\n    [LIST_TYPES.READY]: 'Ready',\n    [LIST_TYPES.FINISHED]: 'Finished',\n  };\n\n  const createNewTask = (title) => {\n    const newTask = {\n      id: uniqid(),\n      title,\n      description: '',\n      created: new Date().toISOString(),\n      status: LIST_TYPES.BACKLOG,\n    };\n    setTasks([...tasks, newTask]);\n  };\n\n  const moveTask = Object.values(LIST_TYPES).map((type) => {\n    const listTasks = tasks.filter((task) => task.status === type);\n    const prevTaskList = tasks.filter(\n      (task) =>\n        task.status ===\n        Object.values(LIST_TYPES)[\n          Object.values(LIST_TYPES).indexOf(type) - 1\n        ]\n    );\n\n    return (\n      <CardItem\n        key={LIST_TYPES_COPY[type]}\n        type={type}\n        title={LIST_TYPES_COPY[type]}\n        tasks={listTasks || []}\n        setTasks={setTasks}\n        createNewTask={createNewTask}\n        prevTaskList={prevTaskList}\n      />\n    );\n  })\n  return (\n    <>\n      {moveTask}\n    </>\n  );\n}\n\nexport default Card;\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AACpB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,MAAM,MAAM,QAAQ;AAE3B,SAASC,IAAIA,CAACC,KAAK,EAAE;EAAA,IAAAC,gBAAA;IAAAC,KAAA;EAAA,IACXC,KAAK,GAAeH,KAAK,CAAzBG,KAAK;IAAEC,QAAQ,GAAKJ,KAAK,CAAlBI,QAAQ;EAEvB,IAAMC,UAAU,GAAG;IACjBC,OAAO,EAAE,SAAS;IAClBC,WAAW,EAAE,YAAY;IACzBC,KAAK,EAAE,OAAO;IACdC,QAAQ,EAAE;EACZ,CAAC;EACD,IAAMC,eAAe,IAAAT,gBAAA,OAAAU,eAAA,CAAAV,gBAAA,EAClBI,UAAU,CAACC,OAAO,EAAG,SAAS,GAAAK,eAAA,CAAAV,gBAAA,EAC9BI,UAAU,CAACE,WAAW,EAAG,aAAa,GAAAI,eAAA,CAAAV,gBAAA,EACtCI,UAAU,CAACG,KAAK,EAAG,OAAO,GAAAG,eAAA,CAAAV,gBAAA,EAC1BI,UAAU,CAACI,QAAQ,EAAG,UAAU,GAAAR,gBAAA,CAClC;EAED,IAAMW,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,KAAK,EAAK;IAC/B,IAAMC,OAAO,GAAG;MACdC,EAAE,EAAEjB,MAAM,EAAE;MACZe,KAAK,EAALA,KAAK;MACLG,WAAW,EAAE,EAAE;MACfC,OAAO,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE;MACjCC,MAAM,EAAEf,UAAU,CAACC;IACrB,CAAC;IACDF,QAAQ,IAAAiB,MAAA,CAAAC,kBAAA,CAAKnB,KAAK,IAAEW,OAAO,GAAE;EAC/B,CAAC;EAED,IAAMS,QAAQ,GAAGC,MAAM,CAACC,MAAM,CAACpB,UAAU,CAAC,CAACqB,GAAG,CAAC,UAACC,IAAI,EAAK;IACvD,IAAMC,SAAS,GAAGzB,KAAK,CAAC0B,MAAM,CAAC,UAACC,IAAI;MAAA,OAAKA,IAAI,CAACV,MAAM,KAAKO,IAAI;IAAA,EAAC;IAC9D,IAAMI,YAAY,GAAG5B,KAAK,CAAC0B,MAAM,CAC/B,UAACC,IAAI;MAAA,OACHA,IAAI,CAACV,MAAM,KACXI,MAAM,CAACC,MAAM,CAACpB,UAAU,CAAC,CACvBmB,MAAM,CAACC,MAAM,CAACpB,UAAU,CAAC,CAAC2B,OAAO,CAACL,IAAI,CAAC,GAAG,CAAC,CAC5C;IAAA,EACJ;IAED,oBACE/B,KAAA,CAAAqC,aAAA,CAACpC,QAAQ;MACPqC,GAAG,EAAExB,eAAe,CAACiB,IAAI,CAAE;MAC3BA,IAAI,EAAEA,IAAK;MACXd,KAAK,EAAEH,eAAe,CAACiB,IAAI,CAAE;MAC7BxB,KAAK,EAAEyB,SAAS,IAAI,EAAG;MACvBxB,QAAQ,EAAEA,QAAS;MACnBQ,aAAa,EAAEA,aAAc;MAC7BmB,YAAY,EAAEA,YAAa;MAAAI,MAAA,EAAAjC,KAAA;MAAAkC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,EAC3B;EAEN,CAAC,CAAC;EACF,oBACE5C,KAAA,CAAAqC,aAAA,CAAArC,KAAA,CAAA6C,QAAA,QACGlB,QAAQ,CACR;AAEP;AAEA,eAAexB,IAAI"},"metadata":{},"sourceType":"module"}