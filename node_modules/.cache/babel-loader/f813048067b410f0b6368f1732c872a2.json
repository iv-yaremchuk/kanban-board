{"ast":null,"code":"import _toConsumableArray from \"/home/ivan/web/skillfactory/React/kanban-board-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/home/ivan/web/skillfactory/React/kanban-board-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/ivan/web/skillfactory/React/kanban-board-main/src/components/main/card/Card.jsx\";\nimport React from 'react';\nimport './style.css';\nimport CardItem from './CardItem';\nimport uniqid from 'uniqid';\nfunction Card(props) {\n  var _LIST_TYPES_COPY;\n  var tasks = props.tasks,\n    setTasks = props.setTasks;\n  var LIST_TYPES = {\n    BACKLOG: 'backlog',\n    IN_PROGRESS: 'inProgress',\n    READY: 'ready',\n    FINISHED: 'finished'\n  };\n  var LIST_TYPES_COPY = (_LIST_TYPES_COPY = {}, _defineProperty(_LIST_TYPES_COPY, LIST_TYPES.BACKLOG, 'Backlog'), _defineProperty(_LIST_TYPES_COPY, LIST_TYPES.IN_PROGRESS, 'In progress'), _defineProperty(_LIST_TYPES_COPY, LIST_TYPES.READY, 'Ready'), _defineProperty(_LIST_TYPES_COPY, LIST_TYPES.FINISHED, 'Finished'), _LIST_TYPES_COPY);\n  var createNewTask = function createNewTask(title) {\n    var newTask = {\n      id: uniqid(),\n      title: title,\n      description: '',\n      created: new Date().toISOString(),\n      status: LIST_TYPES.BACKLOG\n    };\n    setTasks([].concat(_toConsumableArray(tasks), [newTask]));\n  };\n  var listTasks = null;\n  var prevTaskList = null;\n  var type = null;\n  var moveTask = function moveTask() {\n    return Object.values(LIST_TYPES).map(function (type) {\n      listTasks = tasks.filter(function (task) {\n        return task.status === type;\n      });\n      prevTaskList = tasks.filter(function (task) {\n        return task.status === Object.values(LIST_TYPES)[Object.values(LIST_TYPES).indexOf(type) - 1];\n      });\n    });\n  };\n  return /*#__PURE__*/React.createElement(CardItem, {\n    key: LIST_TYPES_COPY[type],\n    type: type,\n    title: LIST_TYPES_COPY[type],\n    tasks: listTasks || [],\n    setTasks: setTasks,\n    createNewTask: createNewTask,\n    prevTaskList: prevTaskList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  });\n}\nexport default Card;","map":{"version":3,"names":["React","CardItem","uniqid","Card","props","_LIST_TYPES_COPY","tasks","setTasks","LIST_TYPES","BACKLOG","IN_PROGRESS","READY","FINISHED","LIST_TYPES_COPY","_defineProperty","createNewTask","title","newTask","id","description","created","Date","toISOString","status","concat","_toConsumableArray","listTasks","prevTaskList","type","moveTask","Object","values","map","filter","task","indexOf","createElement","key","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/ivan/web/skillfactory/React/kanban-board-main/src/components/main/card/Card.jsx"],"sourcesContent":["import React from 'react';\nimport './style.css';\nimport CardItem from './CardItem';\nimport uniqid from 'uniqid';\n\nfunction Card(props) {\n  const { tasks, setTasks } = props;\n\n  const LIST_TYPES = {\n    BACKLOG: 'backlog',\n    IN_PROGRESS: 'inProgress',\n    READY: 'ready',\n    FINISHED: 'finished',\n  };\n  const LIST_TYPES_COPY = {\n    [LIST_TYPES.BACKLOG]: 'Backlog',\n    [LIST_TYPES.IN_PROGRESS]: 'In progress',\n    [LIST_TYPES.READY]: 'Ready',\n    [LIST_TYPES.FINISHED]: 'Finished',\n  };\n\n  const createNewTask = (title) => {\n    const newTask = {\n      id: uniqid(),\n      title,\n      description: '',\n      created: new Date().toISOString(),\n      status: LIST_TYPES.BACKLOG,\n    };\n    setTasks([...tasks, newTask]);\n  };\n\n  let listTasks = null;\n  let prevTaskList = null;\n  let type = null;\n\n  const moveTask = () => {\n    return (\n        Object.values(LIST_TYPES).map((type) => {\n          listTasks = tasks.filter((task) => task.status === type);\n          prevTaskList = tasks.filter(\n            (task) =>\n              task.status ===\n              Object.values(LIST_TYPES)[\n                Object.values(LIST_TYPES).indexOf(type) - 1\n              ]\n          );\n        })\n    );\n  };\n\n  return (\n    <CardItem\n    key={LIST_TYPES_COPY[type]}\n    type={type}\n    title={LIST_TYPES_COPY[type]}\n    tasks={listTasks || []}\n    setTasks={setTasks}\n    createNewTask={createNewTask}\n    prevTaskList={prevTaskList}\n  />\n  );\n}\n\nexport default Card;\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AACpB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,MAAM,MAAM,QAAQ;AAE3B,SAASC,IAAIA,CAACC,KAAK,EAAE;EAAA,IAAAC,gBAAA;EAAA,IACXC,KAAK,GAAeF,KAAK,CAAzBE,KAAK;IAAEC,QAAQ,GAAKH,KAAK,CAAlBG,QAAQ;EAEvB,IAAMC,UAAU,GAAG;IACjBC,OAAO,EAAE,SAAS;IAClBC,WAAW,EAAE,YAAY;IACzBC,KAAK,EAAE,OAAO;IACdC,QAAQ,EAAE;EACZ,CAAC;EACD,IAAMC,eAAe,IAAAR,gBAAA,OAAAS,eAAA,CAAAT,gBAAA,EAClBG,UAAU,CAACC,OAAO,EAAG,SAAS,GAAAK,eAAA,CAAAT,gBAAA,EAC9BG,UAAU,CAACE,WAAW,EAAG,aAAa,GAAAI,eAAA,CAAAT,gBAAA,EACtCG,UAAU,CAACG,KAAK,EAAG,OAAO,GAAAG,eAAA,CAAAT,gBAAA,EAC1BG,UAAU,CAACI,QAAQ,EAAG,UAAU,GAAAP,gBAAA,CAClC;EAED,IAAMU,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,KAAK,EAAK;IAC/B,IAAMC,OAAO,GAAG;MACdC,EAAE,EAAEhB,MAAM,EAAE;MACZc,KAAK,EAALA,KAAK;MACLG,WAAW,EAAE,EAAE;MACfC,OAAO,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE;MACjCC,MAAM,EAAEf,UAAU,CAACC;IACrB,CAAC;IACDF,QAAQ,IAAAiB,MAAA,CAAAC,kBAAA,CAAKnB,KAAK,IAAEW,OAAO,GAAE;EAC/B,CAAC;EAED,IAAIS,SAAS,GAAG,IAAI;EACpB,IAAIC,YAAY,GAAG,IAAI;EACvB,IAAIC,IAAI,GAAG,IAAI;EAEf,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;IACrB,OACIC,MAAM,CAACC,MAAM,CAACvB,UAAU,CAAC,CAACwB,GAAG,CAAC,UAACJ,IAAI,EAAK;MACtCF,SAAS,GAAGpB,KAAK,CAAC2B,MAAM,CAAC,UAACC,IAAI;QAAA,OAAKA,IAAI,CAACX,MAAM,KAAKK,IAAI;MAAA,EAAC;MACxDD,YAAY,GAAGrB,KAAK,CAAC2B,MAAM,CACzB,UAACC,IAAI;QAAA,OACHA,IAAI,CAACX,MAAM,KACXO,MAAM,CAACC,MAAM,CAACvB,UAAU,CAAC,CACvBsB,MAAM,CAACC,MAAM,CAACvB,UAAU,CAAC,CAAC2B,OAAO,CAACP,IAAI,CAAC,GAAG,CAAC,CAC5C;MAAA,EACJ;IACH,CAAC,CAAC;EAER,CAAC;EAED,oBACE5B,KAAA,CAAAoC,aAAA,CAACnC,QAAQ;IACToC,GAAG,EAAExB,eAAe,CAACe,IAAI,CAAE;IAC3BA,IAAI,EAAEA,IAAK;IACXZ,KAAK,EAAEH,eAAe,CAACe,IAAI,CAAE;IAC7BtB,KAAK,EAAEoB,SAAS,IAAI,EAAG;IACvBnB,QAAQ,EAAEA,QAAS;IACnBQ,aAAa,EAAEA,aAAc;IAC7BY,YAAY,EAAEA,YAAa;IAAAW,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAC3B;AAEJ;AAEA,eAAexC,IAAI"},"metadata":{},"sourceType":"module"}